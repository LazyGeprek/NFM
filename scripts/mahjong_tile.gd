class_name MahjongTile
extends Node

var tiles = [
	0x01, 0x01, 0x01, 0x01,
	0x02, 0x02, 0x02, 0x02,
	0x03, 0x03, 0x03, 0x03,
	0x04, 0x04, 0x04, 0x04,
	0x05, 0x05, 0x05, 0x105, # Red 5
	0x06, 0x06, 0x06, 0x06,
	0x07, 0x07, 0x07, 0x07,
	0x08, 0x08, 0x08, 0x08,
	0x09, 0x09, 0x09, 0x09, # Pinzu (Circles) 1-9 
	
	0x11, 0x11, 0x11, 0x11,
	0x12, 0x12, 0x12, 0x12,
	0x13, 0x13, 0x13, 0x13,
	0x14, 0x14, 0x14, 0x14,
	0x15, 0x15, 0x15, 0x115, # Red 5
	0x16, 0x16, 0x16, 0x16,
	0x17, 0x17, 0x17, 0x17,
	0x18, 0x18, 0x18, 0x18,
	0x19, 0x19, 0x19, 0x19, # Souzu (Bamboos) 1-9 
	
	#0x21, 0x21, 0x21, 0x21,
	#0x22, 0x22, 0x22, 0x22,
	#0x23, 0x23, 0x23, 0x23,
	#0x24, 0x24, 0x24, 0x24,
	#0x25, 0x25, 0x25, 0x125, # Red 5
	#0x26, 0x26, 0x26, 0x26,
	#0x27, 0x27, 0x27, 0x27,
	#0x28, 0x28, 0x28, 0x28,
	#0x29, 0x29, 0x29, 0x29, # Manzu (Characters) 1-9 
	#
	#0x31, 0x31, 0x31, 0x31,  # East
	#0x41, 0x41, 0x41, 0x41,  # South
	#0x51, 0x51, 0x51, 0x51,  # West
	#0x61, 0x61, 0x61, 0x61,  # North
	#
	#0x71, 0x71, 0x71, 0x71,  # White
	#0x81, 0x81, 0x81, 0x81,  # Green
	#0x91, 0x91, 0x91, 0x91,  # Red
	]

func tile_code(tile: int) -> String:
	if tile <= 0x09:
		return str(tile - 0x00) + "p" # 1-9 pinzu
	elif tile <= 0x19:
		return str(tile - 0x10) + "s" # 1-9 souzu
	elif tile <= 0x29:
		return str(tile - 0x20) + "m" # 1-9 manzu
	elif tile == 0x0105:
		return "0p" # akadora pinzu
	elif tile == 0x0115:
		return "0s" # akadora souzu
	elif tile == 0x0125:
		return "0m" # akadora manzu
	elif tile >= 0x31 and tile <= 0x91:
		var honors = ["1z", "2z", "3z", "4z", "5z", "6z", "7z"] 
		# [ E, S, W, N, Wh, Gn, Rd ]
		return honors[int((tile - 0x31) / 0x10)]  # Normalize to index 0-6
	else:
		return "?"

func tile_encode(array):
	var temp = []
	for tile in array:
		temp.append(tile_code(tile))
	return temp
